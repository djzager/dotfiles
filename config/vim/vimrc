" Most helpful other configs I have taken from:
" https://github.com/LukeSmithxyz/voidrice
" https://github.com/wincent/wincent
" https://github.com/jessfraz/dotfiles
let mapleader = " "

" Environment
	set directory=$XDG_CACHE_HOME/vim,~/,/tmp
	set backupdir=$XDG_CACHE_HOME/vim,~/,/tmp
	set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
	set runtimepath=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME
	let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc"

" Plugins
	call plug#begin("$XDG_CONFIG_HOME/vim/plugged")
	Plug 'airblade/vim-gitgutter'
	" Issue https://github.com/chriskempson/base16-vim/issues/197
	" Pull Request https://github.com/chriskempson/base16-vim/pull/198
	" Plug 'chriskempson/base16-vim'
	Plug 'danielwe/base16-vim'
	Plug 'christoomey/vim-tmux-navigator'
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
	Plug 'junegunn/fzf'
	Plug 'junegunn/fzf.vim'
	Plug 'kopischke/vim-fetch'
	Plug 'Raimondi/delimitMate'
	Plug 'sheerun/vim-polyglot'
	Plug 'tpope/vim-commentary'
	Plug 'tpope/vim-sensible'
	Plug 'tpope/vim-fugitive'
	Plug 'tpope/vim-surround'
	Plug 'vim-airline/vim-airline'
	Plug 'w0rp/ale'
	call plug#end()

" Basic
	set nocompatible                " Use Vim settings, rather than Vi settings (much better!).
	set ttyfast                     " Draw faster
	set number relativenumber       " Relative line numbers
	set wildmode=longest,list,full  " Command autocompletion
	syntax on                       " Syntax highlighting
	set showmatch                   " Highlight curlybraces!
	set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.
	set encoding=utf-8              " Use utf-8 when displaying
	set winwidth=120                " Minimum number of columns for current window
	set list listchars=tab:¬\       " Show hidden characters
	set tabstop=2 shiftwidth=2      " Handle <Tab> and indent
	set expandtab
	set splitright splitbelow       " New splits → New splits ↓
	set scrolloff=10                " Show a few lines of context around the cursor.
	set ignorecase                  " ignore case when searching
	set incsearch                   " search as we enter text
	set hlsearch                    " highlight matches
	set foldmethod=indent           " fold on indent level
	set foldignore=                 " don't ignore #
	set foldnestmax=10              " max depth 10
	set foldlevelstart=1            " starting fold level

" Autocommands
	if has("autocmd")
		" Enable file type detection.
		filetype plugin on

		" When editing a file, always jump to the last known cursor position.
		autocmd BufReadPost *
		\ if line("'\"") >= 1 && line("'\"") <= line("$") |
		\   exe "normal! g`\"" |
		\ endif

		autocmd BufRead,BufNewFile *.py.stub set filetype=python
		autocmd BufRead,BufNewFile *.pod,*.svc,*.app,*.yml set filetype=yaml
		autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby
		autocmd BufRead,BufNewFile *.zsh-theme set filetype=conf

		" Use relative numbering
		autocmd FocusLost * :set norelativenumber
		autocmd FocusGained * :set relativenumber
		autocmd InsertEnter * :set norelativenumber
		autocmd InsertLeave * :set relativenumber

		" Automatically delete all trailing whitespace on save.
		autocmd BufWritePre * %s/\s\+$//e

		" Disables automatic commenting on newline:
		autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
	endif

" Custom Commands
" Likewise, Files command with preview window
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
nnoremap <C-p> :Files<cr>

" Git Related Shortcuts
	map <leader>gb :Gblame<cr>
	map <leader>gd :Gdiff<cr>
	map <leader>gdm :Gdiff master<cr>
	map <leader>gs :Gstatus<cr>
	map <leader>gc :Gcommit<cr>

" Spell-check set to <leader>o, 'o' for 'orthography':
	map <leader>o :setlocal spell! spelllang=en_us<cr>
	map <leader>b :Buffers<cr>
	map <leader>f :Files<cr>

" Color
	if filereadable(expand("~/.vimrc_background"))
		let base16colorspace=256
		source ~/.vimrc_background
		highlight Normal ctermbg=none
		highlight NonText ctermbg=none
		highlight LineNr ctermbg=none
		highlight GitGutterAdd ctermbg=none
		highlight GitGutterChange ctermbg=none
		highlight GitGutterDelete ctermbg=none
		highlight GitGutterChangeDelete ctermbg=none
	endif
