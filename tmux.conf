# vim:foldmethod=marker:foldlevel=0
# David Zager
#
# Motivation:
# - https://github.com/wincent/wincent/blob/master/roles/dotfiles/files/.tmux.conf

# Prefix {{{
# Set prefix to space.
unbind C-b
set -g prefix C-Space
# }}} End Prefix

# Navigation {{{
# Vim-like key bindings for pane navigation (default uses cursor keys).
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'
# }}} End Navigation

# Window Splitting {{{
# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"
# }}} End Window Splitting

# Mouse movement {{{
# Turn the mouse on
# Stay in copy mode on drag end, but otherwise exit for mouse up.
set -g mouse on
# }}} End Mouse

# Basic {{{
set -g remain-on-exit off
# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on
# But don't change tmux's own window titles.
set -g allow-rename off
set-window-option -g automatic-rename off

# Turn on xterm-keys so that additional function keys get escape sequences
set -g xterm-keys on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
set -g history-limit 262144

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-a.
set -s escape-time 0

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind m set monitor-activity\; display 'monitor-activity #{?monitor-activity,on,off}'
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Use C-r to reload of the config file
unbind-key r
bind-key r source-file ~/.tmux.conf

set -g status-left-length 40
set -g status-bg green
set -g status-left '#[fg=black][ #S ] '
set -g status-right "$USER@#h #[fg=black]%H:%M "
set -wg window-status-current-bg black
set -wg window-status-current-fg green
set -g status-interval 60 # Default is 15.
# }}} End Basic

# {{{ Bind Keys
# Swap current window with the first
# Use < to swap with previous
# Use > to swap with next
bind-key T swap-window -t 1
bind-key < swap-window -t -1
bind-key > swap-window -t +1

# Copy/Paste
unbind-key p
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"

# Select window
is_irc="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?weechat?x?)(diff)?$'"
bind-key -n M-1 if-shell "$is_irc" "send-keys M-1" "select-window -t 1"
bind-key -n M-2 if-shell "$is_irc" "send-keys M-2" "select-window -t 2"
bind-key -n M-3 if-shell "$is_irc" "send-keys M-3" "select-window -t 3"
bind-key -n M-4 if-shell "$is_irc" "send-keys M-4" "select-window -t 4"
bind-key -n M-5 if-shell "$is_irc" "send-keys M-5" "select-window -t 5"
bind-key -n M-6 if-shell "$is_irc" "send-keys M-6" "select-window -t 6"
bind-key -n M-7 if-shell "$is_irc" "send-keys M-7" "select-window -t 7"
bind-key -n M-8 if-shell "$is_irc" "send-keys M-8" "select-window -t 8"
bind-key -n M-9 if-shell "$is_irc" "send-keys M-9" "select-window -t 9"
# }}} End Bind Keys
